<html>
  <head>
    <title>Map</title>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
    <link rel="stylesheet" type="text/css" href="./style.css" />
    <script type="module" src="./app.js"></script>

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
      integrity="sha384-JcqiIsfFjUiPpp2OlwpwVjwpfu1JWgC1lN26OLJwMILfkJo4koalMFFJw7qA7u8w" crossorigin="anonymous">

      <style>
        .footer {
          position: fixed;
          bottom: 0;
          left: 0;
          width: 100%;
          margin-bottom: 10px;
        }
      </style>
  </head>
  <body>
    <h3>My Google Maps</h3>
    <p>Latitude:</p>
    <p class="latitude"><%= lat %></p>
    <p>Longtitude:</p>
    <p class="longtitude"><%= lng %></p>
    <div id="map"></div>
    <div class="footer">
      &copy; 2024 Diyar Amangeldi, SE-2202
    </div>
    
    <!--https://developers.google.com/maps/documentation/javascript/load-maps-js-api?hl=ru#javascript -->
    <script>
      (g => {
          var h, a, k;
          var p = "The Google Maps JavaScript API";
          var c = "google";
          var l = "importLibrary";
          var q = "__ib__";
          var m = document;
          var b = window;
          b = b[c] || (b[c] = {});
          var d = b.maps || (b.maps = {});
          var r = new Set();
          var e = new URLSearchParams();
          var u = () => h || (h = new Promise(async (f, n) => {
              await (a = m.createElement("script"));
              e.set("libraries", [...r] + "");
              for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]);
              e.set("callback", c + ".maps." + q);
              a.src = `https://maps.${c}apis.com/maps/api/js?` + e;
              d[q] = f;
              a.onerror = () => h = n(Error(p + " could not load."));
              a.nonce = m.querySelector("script[nonce]")?.nonce || "";
              m.head.append(a);
          }));
          d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n))
      })({
          key: "AIzaSyAycQCTMjhQO9jqkQYomT6pcqEp-bMnrI0",
          v: "weekly"
      });
    </script>
    <script>

      
      const latElement = document.querySelector(".latitude");
      const lngElement = document.querySelector(".longtitude");
      const lat = latElement ? latElement.textContent.trim() : null;
      const lng = lngElement ? lngElement.textContent.trim() : null;
      
      const latNumb = parseInt(lat, 10);
      console.log(typeof lng);
      console.log(typeof latNumb);
      const lngNumb = parseInt(lng, 10);
     
      console.log("Latitude:", lat);
      console.log("Longitude:", lng);
    
      let map;
      
      async function initMap() {
       
        const position = { lat: latNumb, lng: lngNumb };

       
        //@ts-ignore
        const { Map } = await google.maps.importLibrary("maps");
        const { AdvancedMarkerElement } = await google.maps.importLibrary(
          "marker"
        );

       
        map = new Map(document.getElementById("map"), {
          zoom: 4,
          center: position,
          mapId: "terrain",
        });

      
        const marker = new AdvancedMarkerElement({
          map: map,
          position: position,
          title: "Custom Location",
        });
      }

      initMap();
    </script>
  </body>
</html>
